[{
  "id": "unsized-media",
  "name": "Unsized Media",
  "type": "images",
  "url": "/demos/unsized-media.html",
  "what": "Allows developers to enforce that image/video elements have explicit dimensions. If dimensions aren't specified on the element, the browser sets a default size of 300x150 when this policy is active.",
  "why": "Reduces the layout work the browser has to perform.",
  "usage": {
    "off": "Document-Policy: unsized-media",
    "on": "Document-Policy: unsized-media=?0"
  },
  "examples": {
    "header": [
      "Document-Policy: unsized-media",
      "Document-Policy: unsized-media=?0"
    ]
  }
}, {
  "id": "sync-xhr",
  "name": "Synchronous XHR",
  "type": "performance",
  "url": "/demos/sync-xhr.html",
  "chromeStatusLink": "https://www.chromestatus.com/feature/5154875084111872",
  "what": "Disallows the use of synchronous XMLHttpRequests.",
  "why": "Using synchronous XHRs can cause jank on the main thread and be detrimental to user experience. Although the HTML spec has <a href=\"https://xhr.spec.whatwg.org/#sync-warning\" target=\"_blank\">deprecated sync XHRs</a>, developers are still able to use it for XHR requests where <code>responseType=\"text\"</code>.",
  "usage": {
    "off": "Feature-Policy: sync-xhr 'self'",
    "on": "Feature-Policy: sync-xhr 'none'"
  },
  "examples": {
    "header": [
      "Feature-Policy: sync-xhr 'none'"
    ]
  }
}, {
  "id": "autoplay",
  "name": "Autoplay media",
  "type": "granular",
  "url": "/demos/autoplay.html",
  "chromeStatusLink": "https://www.chromestatus.com/feature/5100524789563392",
  "what": "Allows cross-origin videos and movies to autoplay.",
  "why": "By default, Chrome allows the `autoplay` attribute on videos within same-origin iframes. To enable cross-origin videos to autoplay (or disallow same-origin videos from auto playing), sites can use this feature policy.",
  "usage": {
    "off": "Feature-Policy: autoplay 'self'",
    "on": "Feature-Policy: autoplay 'none'"
  },
  "examples": {
    "header": [
      "Feature-Policy: autoplay 'none'",
      "Feature-Policy: autoplay 'self'"
    ]
  }
}, {
  "id": "geolocation",
  "name": "Geolocation",
  "type": "granular",
  "url": "/demos/geolocation.html",
  "chromeStatusLink": null,
  "what": "Allows/disables the use of the Geolocation API.",
  "why": "By default, Chrome blocks the usage of geolocation in cross-origin iframes. Developers can control this behavior (or geolocation access in general) using this feature policy.",
  "usage": {
    "off": "Feature-Policy: geolocation 'self'",
    "on": "Feature-Policy: geolocation https://google-developers.appspot.com"
  },
  "examples": {
    "header": [
      "Feature-Policy: geolocation 'self'",
      "Feature-Policy: geolocation https://google-developers.appspot.com"
    ],
    "iframe": [
      "&lt;iframe src=\"...\" allow=\"geolocation https://google-developers.appspot.com\"><\/iframe>"
    ]
  }
}, {
  "id": "picture-in-picture",
  "name": "Picture-in-Picture",
  "type": "granular",
  "url": "/demos/picture-in-picture.html",
  "chromeStatusLink": "https://www.chromestatus.com/features/5729206566649856",
  "what": "Controls access to Picture in Picture.",
  "why": "By default, Chrome allows the usage of Picture-in-Picture in cross-origin iframes. Developers can disable it using this feature policy.",
  "usage": {
    "on": "Feature-Policy: picture-in-picture 'self'",
    "off": "Feature-Policy: picture-in-picture 'none'"
  },
  "examples": {
    "header": [
      "Feature-Policy: picture-in-picture 'self'",
      "Feature-Policy: picture-in-picture 'none'"
    ]
  }
}, {
  "id": "animations",
  "name": "Fast animations",
  "type": "performance",
  "url": "/demos/animations.html",
  "what": "Restricts the set of CSS properties which can be animated to opacity, transform, and filter.",
  "why": "Ensures smooth animations, by only allowing those properties which can be animated on the GPU using the hardware acceleration.",
  "usage": {
    "off": "Feature-Policy: animations 'self'",
    "on": "Feature-Policy: animations 'none'"
  },
  "examples": {
    "header": [
      "Feature-Policy: animations 'none'"
    ],
    "iframe": [
      "&lt;iframe allow=\"animations https:\/\/anim8.cdn.com\" src=\"...\"><\/iframe>"
    ]
  }
}, {
  "id": "oversized-images",
  "name": "Oversized images",
  "type": "images",
  "url": "/demos/oversized-images.html",
  "what": "Ensures instrinsic size of images are not more than X times larger than their container size.",
  "why": "Image bloat is a large problem on the web. Sending unnecessarily large images is bad for performance, UX, and wastes bandwidth.",
  "usage_desc": "Maximum image_size / container_size ratio",
  "usage": {
    "1.0": "Document-Policy: oversized-images=1.0",
    "2.0": "Document-Policy: oversized-images=2.0",
    "4.0": "Document-Policy: oversized-images=4.0"
  },
  "examples": {
    "header": [
      "Document-Policy: oversized-images=2.0"
    ]
  }
}, {
  "id": "unoptimized-lossy-images",
  "name": "Unoptimized images",
  "type": "images",
  "url": "/demos/unoptimized-lossy-images.html",
  "what": "Requires the data size of images (in bytes) to be no more than X times bigger than its rendering area (in pixels). Images violating this policy render as placeholder images.",
  "why": "Ensures optimized performance with images by minimizing file size, reducing image bloat and saving bandwidth.",
  "usage_desc": "Maximum byte per pixel",
  "usage": {
    "1.0": "Document-Policy: unoptimized-lossy-images=1.0, unoptimized-lossless-images=1.0, unoptimized-lossless-images-strict=1.0",
    "2.0": "Document-Policy: unoptimized-lossy-images=2.0, unoptimized-lossless-images=2.0, unoptimized-lossless-images-strict=2.0",
    "4.0": "Document-Policy: unoptimized-lossy-images=4.0, unoptimized-lossless-images=4.0, unoptimized-lossless-images-strict=4.0"
  },
  "examples": {
    "header": [
      "Document-Policy: unoptimized-lossy-images=1.0",
      "Document-Policy: unoptimized-lossless-images=1.0",
      "Document-Policy: unoptimized-lossless-images-strict=1.0"
    ]
  }
}, {
  "id": "sync-script",
  "name": "Synchronous scripts",
  "type": "performance",
  "url": "/demos/sync-script.html",
  "what": "Prevents synchronous, parsing blocking scripts from executing.",
  "why": "Inline scripts and <code>&lt;script src></code> without the <code>defer</code>/<code>async</code> attributes block the parser. This can lead to bad performance and poor UX. Instead, use <code>defer</code>/<code>async</code> when loading scripts, dynamically inject them into the page using JS, or use ES Modules (which are defer loaded by default). These solutions will not violate this feature policy.",
  "usage": {
    "off": "Feature-Policy: sync-script 'self'",
    "on": "Feature-Policy: sync-script 'none'"
  },
  "examples": {
    "header": [
      "Feature-Policy: sync-script 'none'"
    ],
    "iframe": [
      "&lt;iframe allow=\"sync-script 'none'\" src=\"...\"><\/iframe>"
    ]
  }
}, {
  "id": "vertical-scroll",
  "name": "Vertical scroll",
  "type": "granular",
  "url": "/demos/vertical-scroll.html",
  "what": "Controls whether embedded content can interfere with vertical scrolling.",
  "why": "By default, iframe content can use <code>touch-action: none</code>, <code>e.preventDefault()</code> in touch events, and the DOM Scroll APIs to prevent and/or alter how content scrolls vertically. This policy ensures vertical scrolling is not blocked by preventing these features from working.",
  "usage": {
    "off": "Feature-Policy: vertical-scroll 'self'",
    "on": "Feature-Policy: vertical-scroll 'none'"
  },
  "examples": {
    "header": [
      "Feature-Policy: vertical-scroll 'none'"
    ],
    "iframe": [
      "&lt;iframe allow=\"vertical-scroll 'none'\" src=\"...\"><\/iframe>"
    ]
  }
}]
